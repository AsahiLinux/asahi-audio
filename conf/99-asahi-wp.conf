# Clamp util to keep Pipewire on ecores
context.modules = [
	{ name = libpipewire-module-rt
        args = {
            nice.level    = -11
            #rt.prio      = 88
            #rt.time.soft = -1
            #rt.time.hard = -1
            uclamp.min = 0
            uclamp.max = 64
        }
        flags = [ ifexists nofail ]
    }
]

monitor.alsa.rules = [
    {
        matches = [
            { node.name = "alsa_output.platform-sound.HiFi__Speaker__sink" },
            { alsa.id = "~AppleJ*" }
        ]
        actions = {
            update-props = {
                audio.allowed-rates = [48000, 44100]
            }
        }
    }
]

node.dsp.rules = [
    # J293 (MacBook Pro 13", M1, 2020)
    {
        matches = [
            { node.name = "alsa_output.platform-sound.HiFi__Speaker__sink" }
            { alsa.id = "AppleJ293" }
        ]
        actions = {
            update-props = {
                filter-graph = "/usr/share/asahi-audio/j293/graph.json"
                hide-parent = true
            }
        }
    }

    # J493 (MacBook Pro 13", M2, 2022)
    {
        matches = [
            { node.name = "alsa_output.platform-sound.HiFi__Speaker__sink" }
            { alsa.id = "AppleJ493" }
        ]
        actions = {
            update-props = {
                filter-graph = "/usr/share/asahi-audio/j293/graph-j493.json"
                hide-parent = true
            }
        }
    }

    # J313 (MacBook Air 13", M1, 2020)
    {
        matches = [
            { node.name = "alsa_output.platform-sound.HiFi__Speaker__sink" }
            { alsa.id = "AppleJ313" }
        ]
        actions = {
            update-props = {
                filter-graph = "/usr/share/asahi-audio/j313/graph.json"
                hide-parent = true
            }
        }
    }

    # J413 (MacBook Air 15", M2, 2023)
    {
        matches = [
            { node.name = "alsa_output.platform-sound.HiFi__Speaker__sink" }
            { alsa.id = "AppleJ413" }
        ]
        actions = {
            update-props = {
                filter-graph = "/usr/share/asahi-audio/j413/graph.json"
                hide-parent = true
            }
        }
    }

    # J415 (MacBook Air 15", M2, 2023)
    {
        matches = [
            { node.name = "alsa_output.platform-sound.HiFi__Speaker__sink" }
            { alsa.id = "AppleJ415" }
        ]
        actions = {
            update-props = {
                filter-graph = "/usr/share/asahi-audio/j415/graph.json"
                hide-parent = true
            }
        }
    }

    # J314 (MacBook Pro 14", M1 Pro/Max, 2021)
    {
        matches = [
            { node.name = "alsa_output.platform-sound.HiFi__Speaker__sink" }
            { alsa.id = "AppleJ314" }
        ]
        actions = {
            update-props = {
                filter-graph = "/usr/share/asahi-audio/j314/graph.json"
                hide-parent = true
            }
        }
    }

    # J414 (MacBook Pro 14", M2 Pro/Max, 2023)
    {
        matches = [
            { node.name = "alsa_output.platform-sound.HiFi__Speaker__sink" }
            { alsa.id = "AppleJ414" }
        ]
        actions = {
            update-props = {
                filter-graph = "/usr/share/asahi-audio/j314/graph-j414.json"
                hide-parent = true
            }
        }
    }

    # J316 (MacBook Pro 16", M1 Pro/Max, 2021)
    {
        matches = [
            { node.name = "alsa_output.platform-sound.HiFi__Speaker__sink" }
            { alsa.id = "AppleJ316" }
        ]
        actions = {
            update-props = {
                filter-graph = "/usr/share/asahi-audio/j316/graph.json"
                hide-parent = true
            }
        }
    }

    # J416 (MacBook Pro 16", M2 Pro/Max, 2023)
    {
        matches = [
            { node.name = "alsa_output.platform-sound.HiFi__Speaker__sink" }
            { alsa.id = "AppleJ416" }
        ]
        actions = {
            update-props = {
                filter-graph = "/usr/share/asahi-audio/j416/graph-j416.json"
                hide-parent = true
            }
        }
    }

    # J274 (Mac mini, M1, 2020)
    {
        matches = [
            { node.name = "alsa_output.platform-sound.HiFi__Speaker__sink" }
            { alsa.id = "AppleJ274" }
        ]
        actions = {
            update-props = {
                filter-graph = "/usr/share/asahi-audio/j274/graph.json"
                hide-parent = true
            }
        }
    }

    # J473 (Mac mini, M2, 2023)
    {
        matches = [
            { node.name = "alsa_output.platform-sound.HiFi__Speaker__sink" }
            { alsa.id = "AppleJ473" }
        ]
        actions = {
            update-props = {
                filter-graph = "/usr/share/asahi-audio/j274/graph-j473.json"
                hide-parent = true
            }
        }
    }

    # J474 (Mac mini, M2 Pro/Max, 2023)
    {
        matches = [
            { node.name = "alsa_output.platform-sound.HiFi__Speaker__sink" }
            { alsa.id = "AppleJ474" }
        ]
        actions = {
            update-props = {
                filter-graph = "/usr/share/asahi-audio/j274/graph-j474.json"
                hide-parent = true
            }
        }
    }

    # J375 (Mac Studio, M1 Max/Ultra, 2021)
    {
        matches = [
            { node.name = "alsa_output.platform-sound.HiFi__Speaker__sink" }
            { alsa.id = "AppleJ375" }
        ]
        actions = {
            update-props = {
                filter-graph = "/usr/share/asahi-audio/j375/graph.json"
                hide-parent = true
            }
        }
    }

    # J475 (Mac Studio, M2 Max/Ultra, 2021)
    {
        matches = [
            { node.name = "alsa_output.platform-sound.HiFi__Speaker__sink" }
            { alsa.id = "AppleJ475" }
        ]
        actions = {
            update-props = {
                filter-graph = "/usr/share/asahi-audio/j375/graph-j475.json"
                hide-parent = true
            }
        }
    }
]

wireplumber.components = [
    {
        name = device/asahi-limit-volume.lua, type = script/lua,
        provides = custom.asahi
    }
]

wireplumber.profiles = {
    main = {
        custom.asahi = required
        node.dsp = required
    }
}
